<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/pages/californiatemplate/template.xhtml">

    <ui:define name="title">Capture Payment</ui:define>
    <ui:define name="viewname">Capture Payments</ui:define>

    <ui:define name="content">
        <ui:fragment rendered="#{!(componentRenderer.canViewPayment || componentRenderer.canCapturePayment)}">
            <div class="ui-g ui-fluid">
                <div class="ui-g-12">
                    <div class="exception-topbar">
                        <h:link styleClass="logo">
                            <p:graphicImage library="freya-layout"/>
                        </h:link>
                    </div>

                    <div class="exception-panel">
                        <p:graphicImage styleClass="exception-icon"
                                        name="images/icon-access.png" library="freya-layout"/>
                        <h1 class="exception-summary">Access Denied</h1>
                        <p class="exception-detail">
                            You don't have the necessary permissons.<br></br> Contact the
                            administrator for more information.
                        </p>
                    </div>

                </div>
            </div>
        </ui:fragment>

        <div class="ui-g ui-fluid">
            <div class="ui-g-12">
                <h:form id="capturePaymentsView" enctype="multipart/form-data" rendered="#{componentRenderer.canCapturePayment}">

                    <div class="card">
                        <div class="p-grid">
                            <div class="p-col-12 p-md-6 p-lg-3">
                                <p:calendar placeholder="From Date Created"
                                            value="#{capturePaymentsView.createdFrom}"
                                            inputStyleClass="Wid100 "
                                            navigator="true" pattern="dd MMM, yyyy" />
                            </div>
                            <div class="p-col-12 p-md-6 p-lg-3">
                                <p:calendar placeholder="To Date Created"
                                            value="#{capturePaymentsView.createdTo}"
                                            inputStyleClass="Wid100 "
                                            navigator="true" pattern="dd MMM, yyyy" />
                            </div>
                            <div class="p-col-12 p-md-6 p-lg-3">
                                <p:inputText value="#{capturePaymentsView.searchTerm}"
                                             placeholder="Enter your search"
                                />
                            </div>

                            <div class="p-col-12 p-md-6 p-lg-1">
                                <p:commandButton icon="fa fa-search" value="Search"
                                                 styleClass="ui-button-primary" id="searchBtn"
                                                 style="margin-right: 18px" update="capturePaymentsView"
                                                 actionListener="#{capturePaymentsView.reloadFilterReset()}">
                                </p:commandButton>
                            </div>

                        </div>
                    </div>

                    <ui:fragment>
                        <div class="p-grid table-demo">
                            <div class="p-col-12">
                                <div class="card">
                                    <p:dataTable id="invoicesTable" var="model" value="#{capturePaymentsView.dataModels}"
                                                 widgetVar="invoicesTable"
                                                 paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}"
                                                 paginator="true" lazy="true" rows="8"
                                                 emptyMessage="#{capturePaymentsView.dataEmptyMessage}"
                                                 filteredValue="#{capturePaymentsView.searchResults}"
                                                 paginatorPosition="bottom" paginatorAlwaysVisible="true"
                                                 rowIndexVar="row" reflow="true" styleClass="TableAlignment">

                                        <f:facet name="header">
                                            <div class="p-d-flex p-jc-between">
                                                <div>
                                                    <h:outputText value="UNPAID AND PARTIALLY PAID INVOICES" styleClass="text-lg font-bold" />
                                                </div>
                                                <div>
                                                    <span class="font-bold">#{capturePaymentsView.totalRecords} Record(s) Found</span>
                                                </div>
                                                <div>
                                                    <p:commandButton value="Export" process="invoicesTable"
                                                                     icon="fa fa-download" styleClass="ui-button-outlined"
                                                                     ajax="false">
                                                        <p:dataExporter type="pdf" target="invoicesTable"
                                                                        fileName="unpaid invoices"/>
                                                    </p:commandButton>
                                                </div>
                                            </div>
                                        </f:facet>

                                        <p:column width="30" headerText="No.">
                                            <h:outputText value="#{row + 1}" />
                                        </p:column>

                                        <p:column>
                                            <f:facet name="header">
                                                <h:outputText value="InvoiceNo." />
                                            </f:facet>
                                            <h:outputText value="#{model.invoiceNumber}" />
                                        </p:column>
                                        <p:column>
                                            <f:facet name="header">
                                                <h:outputText value="Client" />
                                            </f:facet>
                                            <h:outputText value="#{model.clientSubscription.client.clientFirstName}
                                                            #{model.clientSubscription.client.clientLastName}" />
                                        </p:column>
                                        <p:column>
                                            <f:facet name="header">
                                                <h:outputText value="Product" />
                                            </f:facet>
                                            <h:outputText value="#{model.clientSubscription.subscription.product.productName}" />
                                        </p:column>

                                        <p:column sortBy="#{model.invoiceStatus}">
                                            <f:facet name="header">
                                                <h:outputText value="Invoice Status"/>
                                            </f:facet>
                                            <h:outputText value="#{model.invoiceStatus}" />
                                        </p:column>


                                        <p:column headerText="Capture Payment" width="140" exportable="false"
                                                  style="text-align: center">

                                                <p:commandButton icon="fa fa-money"
                                                                 styleClass="ui-button-info"
                                                                 rendered="#{(componentRenderer.canCapturePayment)}"
                                                                 actionListener="#{paymentDialog.show}" process="@this">
                                                    <f:setPropertyActionListener value="#{null}"
                                                                                 target="#{paymentDialog.model}"/>

                                                    <f:setPropertyActionListener value="#{model}"
                                                                                 target="#{paymentDialog.invoice}"/>

                                                    <p:ajax event="dialogReturn" update="invoicesTable"
                                                            listener="#{capturePaymentsView.reloadFilterReset()}"/>
                                                    <p:ajax event="dialogReturn" update="invoicesTable" listener="#{approvePaymentDialog.onDialogReturn()}"/>
                                                </p:commandButton>

                                        </p:column>

                                        <p:column headerText="View Invoice" width="140" exportable="false"
                                                  style="text-align: center">

                                            <p:commandButton icon="fa fa-eye"
                                                             styleClass="ui-button-info"
                                                             rendered="#{(componentRenderer.canApprovePayment)}"
                                                             actionListener="#{invoicePreviewDialog.show}">

                                                <f:setPropertyActionListener value="#{model}" target="#{invoicePreviewDialog.invoice}"/>
                                            </p:commandButton>
                                        </p:column>
                                    </p:dataTable>

                                    <p:blockUI block="capturePaymentsView">
                                        <p:graphicImage value="/resources/images/workingicon.png" />
                                    </p:blockUI>
                                </div>
                            </div>
                        </div>
                    </ui:fragment>

                    <p:blockUI block="capturePaymentsView">
                        <p:graphicImage value="/resources/images/workingicon.png" />
                    </p:blockUI>
                    <p:confirmDialog global="true">
                        <p:commandButton value="Approve" type="button"
                                         styleClass="ui-confirmdialog-yes" icon="fa fa-thumbs-up" />
                        <p:commandButton value="No" type="button"
                                         styleClass="ui-confirmdialog-no" icon="fa fa-thumbs-down" />
                    </p:confirmDialog>

                </h:form>
            </div>
        </div>
        <!-- Script to remove messages after a certain duration -->
        <script>
            function removeMessages() {
                var messages = document.querySelectorAll('.ui-growl-item');
                messages.forEach(function(message) {
                    fadeOut(message);
                });
            }

            function fadeOut(element) {
                var opacity = 1;
                var intervalId = setInterval(function() {
                    if (opacity &lt;= 0) {
                        clearInterval(intervalId);
                        element.parentNode.removeChild(element);
                    } else {
                        element.style.opacity = opacity;
                        opacity -= 0.1;
                    }
                }, 100); // 100 milliseconds interval
            }

            setTimeout(removeMessages, 3000); // Remove messages after 3 seconds
        </script>
    </ui:define>
</ui:composition>
